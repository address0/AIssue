server {
    listen 80;
    server_name k11a403.p.ssafy.io;
    return 301 https://$host$request_uri; # HTTP 요청을 HTTPS로 리다이렉트
}

server {
    listen 443 ssl;
    server_name k11a403.p.ssafy.io;

    ssl_certificate /etc/letsencrypt/live/k11a403.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/k11a403.p.ssafy.io/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # 프론트엔드 서비스 (Next.js)
    location / {
        proxy_pass http://frontend:3000/;  # 프론트엔드 컨테이너가 호스트의 3000 포트로 노출된 경우
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # HTTPS로 요청을 전달
    }

    # 백엔드 API 서비스 (Spring Boot)
    location /api/ {
        proxy_pass http://aissue-backend-1:8080/;  # 백엔드 컨테이너가 호스트의 8081 포트로 노출된 경우
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # HTTPS로 요청을 전달
    }

    location /jenkins/ {
        proxy_pass http://localhost:8080/; # Jenkins 포트
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
